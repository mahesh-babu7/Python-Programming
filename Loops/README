Loops in Python are used to execute a block of code repeatedly as long as a condition is true. They help automate repetitive tasks efficiently.

1. for Loop
Used to iterate over a sequence like lists, strings, tuples, or ranges.

fruits = ["apple", "banana", "cherry"]
for fruit in fruits:
    print(fruit)

Using range() with for loop:

for i in range(1, 6):
    print(i)
This prints numbers from 1 to 5.

2. while Loop
Repeats as long as the condition is True.

count = 1
while count <= 5:
    print(count)
    count += 1

3. break Statement
Stops the loop even if the condition is still true.

for i in range(10):
    if i == 5:
        break
    print(i)

4. continue Statement
Skips the current iteration and moves to the next.

for i in range(5):
    if i == 2:
        continue
    print(i)

5. else with Loops
Python allows an else block with loops. It runs only if the loop completes without a break.

for i in range(3):
    print(i)
else:
    print("Loop completed!")

Nested Loops
A loop inside another loop.

for i in range(2):
    for j in range(3):
        print(i, j)
